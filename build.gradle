plugins {
    id 'maven-publish'
    alias libs.plugins.quilt.loom
}

base {
    archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/releases'
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        // for Promenade
        name "JitPack"
        url "https://jitpack.io"
        content {
            includeGroup "com.github.DawnTeamMC"
        }
    }
    maven {
        name "MinecraftForge"
        url "https://maven.minecraftforge.net/"
        content {
            includeGroup "com.github.glitchfiend"
        }
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        content {
            includeGroup 'appeng'
        }
    }
    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}

dependencies {
    minecraft libs.minecraft
    mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
    modImplementation libs.quilt.loader

    // QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
    // Quilted Fabric API will automatically pull in the correct QSL version.
     modImplementation libs.bundles.quilted.fabric.api

    // Target mods
    modCompileOnly(libs.bundles.targets) {
        exclude(group: "net.fabricmc")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "com.llamalad7.mixinextras")
        exclude(group: "io.github.llamalad7")
        exclude(group: "squeek.appleskin")
    }
    modLocalRuntime(libs.bundles.targets) {
        exclude(group: "net.fabricmc")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "com.llamalad7.mixinextras")
        exclude(group: "io.github.llamalad7")
        exclude(group: "squeek.appleskin")
    }
}

processResources {
    inputs.property 'version', version

    filesMatching('quilt.mod.json') {
        expand 'version': version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Still required by IDEs such as Eclipse and Visual Studio Code
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    // If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
    // Uncomment this line to generate them.
    // withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
    from('LICENSE') {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

// Configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
